{"name":"DBAPI.jl","tagline":"A new database interface proposal","body":"# DBAPI\r\n\r\n[![Build Status](https://travis-ci.org/JuliaDB/DBAPI.jl.svg)](https://travis-ci.org/JuliaDB/DBAPI.jl) [![Build status](https://ci.appveyor.com/api/projects/status/xf6c75kxvtluiuit?svg=true)](https://ci.appveyor.com/project/iamed2/dbapi-jl)\r\n [![codecov.io](http://codecov.io/github/JuliaDB/DBAPI.jl/coverage.svg?branch=master)](http://codecov.io/github/JuliaDB/DBAPI.jl?branch=master)\r\n\r\nThis module defines an abstract interface for database drivers in Julia.\r\n\r\nThis module contains abstract types, abstract required functions (which throw\r\na `NotImplementedError` by default), and abstract optional functions (which\r\nthrow a `NotSupportedError` by default).\r\n\r\nDatabase drivers should import this module, subtype its types, and create\r\nmethods for its functions which implement the signatures and behavioural\r\nspecifications contained within this module.\r\n\r\nThis interface is largely inspired by Python's DB API 2.0, which is in the\r\npublic domain: [PEP0249](https://www.python.org/dev/peps/pep-0249).\r\n\r\n\r\n## Null Handling\r\n\r\nAll values of type `T` that could be `null` should be returned as \r\n`Nullable{T}`. \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}